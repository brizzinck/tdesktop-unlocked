name: Windows

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - 'changelog.txt'
      - 'LEGAL'
      - 'LICENSE'
      - '.github/**'
      - '!.github/workflows/win.yml'
      - 'lib/xdg/**'
      - 'snap/**'
      - 'Telegram/build/docker/**'
      - 'Telegram/Resources/uwp/**'
      - 'Telegram/SourceFiles/platform/linux/**'
      - 'Telegram/SourceFiles/platform/mac/**'
      - 'Telegram/Telegram/**'
      - 'Telegram/configure.sh'
      - 'Telegram/Telegram.plist'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - 'changelog.txt'
      - 'LEGAL'
      - 'LICENSE'
      - '.github/**'
      - '!.github/workflows/win.yml'
      - 'lib/xdg/**'
      - 'snap/**'
      - 'Telegram/build/docker/**'
      - 'Telegram/Resources/uwp/**'
      - 'Telegram/SourceFiles/platform/linux/**'
      - 'Telegram/SourceFiles/platform/mac/**'
      - 'Telegram/Telegram/**'
      - 'Telegram/configure.sh'
      - 'Telegram/Telegram.plist'

jobs:

  windows:
    name: Windows Build
    runs-on: windows-latest

    strategy:
      matrix:
        arch: [Win32, x64]
        generator: ["", "Ninja Multi-Config"]

    env:
      UPLOAD_ARTIFACT: "true"
      ONLY_CACHE: "false"
      PREPARE_PATH: "Telegram/build/prepare/prepare.py"

    defaults:
      run:
        shell: cmd

    steps:
      - name: Set up repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up MSVC environment
        uses: ilammy/msvc-dev-cmd@v1.13.0
        with:
          arch: ${{ matrix.arch }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            TBuild/Libraries
            TBuild/ThirdParty
          key: windows-${{ matrix.arch }}-dependencies-${{ hashFiles('Telegram/build/prepare/prepare.py') }}

      - name: Install Dependencies
        run: |
          nuget sources Add -Source https://api.nuget.org/v3/index.json
          nuget restore Telegram.sln

      - name: Configure and Build
        run: |
          cd Telegram
          call configure.bat ^
          -G "${{ matrix.generator }}" ^
          -D CMAKE_C_FLAGS="/WX" ^
          -D CMAKE_CXX_FLAGS="/WX" ^
          -D DESKTOP_APP_DISABLE_AUTOUPDATE=OFF ^
          -D DESKTOP_APP_DISABLE_CRASH_REPORTS=OFF ^
          -D DESKTOP_APP_NO_PDB=ON
          cmake --build ../out --config Release --parallel

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Telegram-Windows-${{ matrix.arch }}
          path: Telegram/out/Release/*.exe
